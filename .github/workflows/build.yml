name: build Boltzmann for release
on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: create a github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Boltzmann ${{ github.ref }}
          draft: true
          prerelease: false
      - run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > uploadurl.txt
      - name: save the upload url
        uses: actions/upload-artifact@v1
        with:
          name: jobdata
          path: uploadurl.txt

  linux:
    name: linux gnulibc build
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/download-artifact@v1
        with:
          name: jobdata
      - run: echo ::set-output name=url::$(cat jobdata/uploadurl.txt)
        id: release_data
      - run: cargo build --release
      - run: tar cfz boltzmann_x64_linux.tar.gz -C target/release boltzmann
      - name: upload x64 linux gnu release
        id: release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_data.outputs.url }}
          asset_path: ./boltzmann_x64_linux.tar.gz
          asset_name: boltzmann_x64_linux.tar.gz
          asset_content_type: application/gzip

  darwin:
    name: darwin
    runs-on: macos-latest
    needs: [release]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/download-artifact@v1
        with:
          name: jobdata
      - run: echo ::set-output name=url::$(cat jobdata/uploadurl.txt)
        id: release_data
      - run: cargo build --release
      - run: tar cfz boltzmann_x64_darwin.tar.gz -C target/release boltzmann
      - name: upload darwin release
        id: release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_data.outputs.url }}
          asset_path: ./boltzmann_x64_darwin.tar.gz
          asset_name: boltzmann_x64_darwin.tar.gz
          asset_content_type: application/gzip

  windows:
    name: windows
    runs-on: windows-latest
    needs: [release]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/download-artifact@v1
        with:
          name: jobdata
      - run: echo "::set-output name=url::$(cat jobdata/uploadurl.txt)"
        id: release_data
        shell: bash

      - run: cargo build --release
      - name: tar it up
        shell: bash
        run: |
          tar cfz boltzmann_x64_windows.tar.gz -C target/release boltzmann
      - name: upload windows release
        id: release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_data.outputs.url }}
          asset_path: ./boltzmann_x64_windows.tar.gz
          asset_name: boltzmann_x64_windows.tar.gz
          asset_content_type: application/gzip

  docs:
    name: docs
    runs-on: ubuntu-latest
    needs: [release]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: jobdata
      - run: echo ::set-output name=url::$(cat jobdata/uploadurl.txt)
        id: release_data
      - run: bin/docs build
      - name: tar it up
        shell: bash
        run: |
          rm -rf docs/output/.git
          tar cfz docs.tar.gz -C docs/output .
      - name: upload docs
        id: release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_data.outputs.url }}
          asset_path: ./docs.tar.gz
          asset_name: docs.tar.gz
          asset_content_type: application/gzip
