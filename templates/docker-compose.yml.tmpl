# This file is provided for local development purposes only.
# The intent is to spin up necessary database resources
# in docker locally, then tear them down once you're done.
#
# To run, use `docker-compose up -d`. This will run the containers
# in the background.
#
# To shut down, run `docker-compose down`.
version: '3.1'
services:
# <% if redis %>
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - <$ service $>
# <% endif %>

# <% if postgres %>
  db:
    image: postgres:10.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${USER}
    networks:
      <$ service $>:
        aliases:
          - database

  createdb:
    links: [db]
    image: jbergknoff/postgresql-client
    entrypoint: ["createdb"]
    command: ["-U", "postgres", "-h", "database", "<$ service $>"]
    networks:
      - <$ service $>

  migrate:
    image: migrate/migrate
    networks:
      - <$ service $>
    volumes:
      - ./migrations:/migrations
    links: [createdb]
    command: ["-path", "/migrations", "-database", "postgres://${USER}@database:5432/<$ service $>?sslmode=disable", "up"]

  createdb_test:
    links: [db]
    image: jbergknoff/postgresql-client
    entrypoint: ["createdb"]
    command: ["-U", "postgres", "-h", "database", "<$ service $>_test"]
    networks:
      - <$ service $>

  migrate_test:
    image: migrate/migrate
    networks:
      - <$ service $>
    volumes:
      - ./migrations:/migrations
    links: [createdb_test]
    command: ["-path", "/migrations", "-database", "postgres://${USER}@database:5432/<$ service $>_test?sslmode=disable", "up"]
# <% endif %>
networks:
  <$ service $>:

# <% if postgres %>
volumes:
  postgres_data:
# <% endif %>

